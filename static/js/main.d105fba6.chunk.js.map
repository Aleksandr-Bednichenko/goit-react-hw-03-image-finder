{"version":3,"sources":["Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/Modal/Modal.module.css","Components/ImageGallery/ImageGallery.module.css","App.module.css","Components/Button/Button.module.css","Components/Loader/Loader.module.css","Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Api/Api.js","Components/Button/Button.js","Components/Modal/Modal.js","Components/Loader/Loader.js","App.js","reportWebVitals.js","index.js","Components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","imgName","handleNameChange","event","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","props","onSubmit","toast","error","className","styles","this","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","placeholder","name","onChange","Component","ImageGalleryItem","id","src","largeImg","alt","ImageGalleryItemImage","height","width","ImageGallery","images","onImgClick","onClick","map","webformatURL","largeImageURL","fetchImg","page","fetch","then","response","ok","json","Promise","reject","Error","propTypes","PropTypes","string","isRequired","api","Button","onBtnClick","text","btn","Modal","onKeydownClick","e","onCloseModal","code","window","addEventListener","removeEventListener","children","Overlay","Load","loader","color","timeout","React","App","isLoading","shouldScroll","currentImages","openModal","handleButton","fetchImages","handleSearchbarSubmit","OnLoadMore","prev","loaderToggle","target","nodeName","dataset","img","toggleModal","setTimeout","imgApi","prevState","hits","catch","finally","prevProps","console","log","length","scrollTo","top","document","documentElement","scrollHeight","behavior","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d105fba6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__3leaA\",\"ImageGalleryItem-image\":\"ImageGalleryItem_ImageGalleryItem-image__1KBfA\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__3IrAq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3p3am\",\"Modal\":\"Modal_Modal__3yRpO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1Q0V1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2XlYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__1F0RD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader_loader__2hkUO\"};","import { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport styles from './Searchbar.module.css';\nimport PropTypes from \"prop-types\";\n\nclass Searchbar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    imgName: '',\n  };\n\n  handleNameChange = event => {\n    this.setState({ imgName: event.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    if (this.state.imgName.trim() === '') {\n      toast.error('Введите название картинки.');\n      return;\n    }\n\n    this.props.onSubmit(this.state.imgName);\n    this.setState({ imgName: '' });\n  };\n\n  render() {\n    return (\n      <header className={styles.Searchbar}>\n        <form onSubmit={this.handleSubmit} className={styles.SearchForm}>\n          <button type=\"submit\" className={styles.SearchFormButton}>\n            <span className={styles.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={styles.SearchFormInput}\n            type=\"text\"\n            //   autocomplete=\"off\"\n            //   autofocus\n            placeholder=\"Search images and photos\"\n            name=\"imgName\"\n            value={this.state.imgName}\n            onChange={this.handleNameChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\n\nexport default Searchbar;\n","import React from 'react';\nimport styles from './ImageGalleryItem.module.css'\nimport PropTypes from \"prop-types\";\n\nconst ImageGalleryItem = ({ id, src, largeImg }) => (\n  <li className={styles.ImageGalleryItem}  key={id}>\n    <img\n      src={src}\n      alt=\"\"\n      className={styles.ImageGalleryItemImage}\n      data-img={largeImg}\n      height=\"240\"\n      width=\"320\"\n    />\n  </li>\n);\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  src: PropTypes.string.isRequired,\n  largeImg: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import ImageGalleryItem from '../ImageGalleryItem';\nimport styles from './ImageGallery.module.css';\nimport PropTypes from \"prop-types\";\n\n\n\n const ImageGallery = ({ images, onImgClick }) => {\n\n\n  return ( \n      <ul className={styles.ImageGallery} onClick={onImgClick} >        \n      {images.map(({ id, webformatURL, largeImageURL }) => (\n        <ImageGalleryItem key={id} src={webformatURL} largeImg={largeImageURL} />\n      ))}\n    </ul>)\n    \n  } \n  \n  ImageGallery.propTypes = {\n    pictures: PropTypes.arrayOf(PropTypes.object),\n    onImgClick: PropTypes.func.isRequired,\n  };\n\n  export default ImageGallery;","import PropTypes from \"prop-types\";\n\nfunction fetchImg(name, page) {\n  const key = '21991810-52bb16b7f0c761b580b9c00ed';\n  return fetch(\n    `https://pixabay.com/api/?q=${name}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`\n    \n  )\n  .then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(new Error(`Нет картинки с именем ${name}`));\n  });\n\n}\n\nfetchImg.propTypes = {\n  name: PropTypes.string.isRequired,\n  page: PropTypes.string.isRequired,\n};\n\nconst api = {\n  fetchImg,\n};\n\nexport default api;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './Button.module.css'\r\n\r\nconst Button = ({ onBtnClick, text }) => (\r\n  <button className={styles.btn} type=\"button\" onClick={onBtnClick}>\r\n    {text}\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  onBtnClick: PropTypes.func.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from './Modal.module.css'\r\n\r\nexport default class Modal extends Component {\r\n  static propTypes = {\r\n    onCloseModal: PropTypes.func,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.onKeydownClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.onKeydownClick);\r\n  }\r\n\r\n  onKeydownClick = (e) => {\r\n    const { onCloseModal } = this.props;\r\n    if (e.code === \"Escape\") {\r\n      onCloseModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { children, onCloseModal } = this.props;\r\n    return (\r\n      <div className={styles.Overlay} onClick={onCloseModal}>\r\n        <div className={styles.Modal}>{children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport styles from './Loader.module.css'\r\nexport default class Load extends React.Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <div className={styles.loader}>\r\n      <Loader\r\n      type=\"TailSpin\" \r\n      color=\"#00BFFF\" \r\n      height={80} \r\n      width={80}\r\n      timeout={3000} //3 secs\r\n      />\r\n     </div>\r\n    );\r\n  }\r\n}","import React from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Searchbar from './Components/Searchbar';\nimport ImageGallery from './Components/ImageGallery';\nimport styles from './App.module.css';\nimport imgApi from './Components/Api';\nimport Button from './Components/Button';\nimport Modal from './Components/Modal';\nimport Load from './Components/Loader';\n\n\nclass App extends React.Component {\n  state = {\n    imgName: '',\n    page: 1,\n    images: [],\n    error: null,\n    isLoading: false,\n    shouldScroll: false,\n    currentImages: \"\",\n    openModal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevState.imgName;\n    const nextName = this.state.imgName;\n\n\n    if (prevName !== nextName) {\n       this.fetchImages();\n    }\n    console.log(this.state.images)\n    if (this.state.images.length > 10) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      })\n    } \n  }\n\n  handleButton = () => {\n\t\tthis.fetchImages();\n\t\tif (this.state.page > 1) {\n\t\t\tthis.setState({ shouldScroll: true });\n\t\t}\n\t};\n\n  handleSearchbarSubmit = imgName => {\n    this.setState({ \n      imgName, \n      page: 1,\n\t\t\timages: [], })\n  };\n\n  OnLoadMore = () => {\n    this.setState((prev) => ({\n      page: prev.page + 1,     \n    }));\n    this.fetchImages();\n  };\n\n  loaderToggle = () => {\n    this.setState((prev) => ({\n      isLoading: !prev.isLoading,\n    }));\n  };\n\n  onImgClick = (e) => {\n    if (e.target.nodeName !== \"IMG\") {\n      return;\n    }\n    this.setState({\n      currentImages: e.target.dataset.img,\n    });\n    this.toggleModal();\n  };\n\n  toggleModal = () => {\n    this.setState((prev) => ({\n      openModal: !prev.openModal,\n    }));\n  };\n\n  fetchImages = () =>{\n   this.loaderToggle();\n   return  setTimeout(() => {\n     const { imgName, page } = this.state;\n      imgApi\n        .fetchImg(imgName, page)\n        .then(images => this.setState((prevState) => ({ \n          images: [...prevState.images,...images.hits], \n          page: prevState.page + 1 })))\n        .catch((error) => this.setState({ error: true }))\n        .finally(() => this.loaderToggle())\n      }, 1000)\n  }\n\n  render() {\n    const { images, isLoading, openModal, currentImages } = this.state;\n    return (\n      \n      <div className={styles.App}>  \n            \n        <Searchbar onSubmit={this.handleSearchbarSubmit} />\n        <ImageGallery images={images} onImgClick={this.onImgClick} />\n        {isLoading && <Load/>}\n        {images.length > 0 && !isLoading && (\n\t\t\t\t\t <Button \n           onBtnClick={this.OnLoadMore}\n           text={\"Загрузить еще\"}\n         />\n\t\t\t\t)}\n        <ToastContainer autoClose={3000} />\n        \n        {openModal && (\n          <Modal onCloseModal={this.toggleModal}>\n            <img src={currentImages} alt=\"Dont Worry Be Happy\" />\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App  />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__2Kgqw\",\"SearchForm\":\"Searchbar_SearchForm__2KJjN\",\"SearchFormButton\":\"Searchbar_SearchFormButton__Sn-8L\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__f3Ip0\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3Lxla\",\"SearchForm-input\":\"Searchbar_SearchForm-input__3RwGX\"};"],"sourceRoot":""}